env:
  global:
  - REPO=startx/monkey-ops
  - CGO_ENABLED=0
  - GOOS=linux
  - secure: JsbXeZklHuVuzHu+Tczx0O2nXm6sUsPMPzsOrj1YLRpX4onryVgbLico7RiTlwRZnOUAtoDxDRhn46mO2Z9CfNszdV6gaoB1taoASjXKQI0GoHgpDuaN9sxNUKhVzOUmOI5R+viQ5Ue5ioyfbTdncN6mh5v8YyGG0MvTfENjgQq0e1c1UQ7SungBcvJHrbT1TprX1Xbig5cj5KHq7gOgltM53d4MwpQOiZ1RQagOfRV0RX4rqxVYmpIhaHe4rSKvsKyJq1WAipxBy6AAXlU+rcdfkfcnfz+xMOqBZpntJdZGSj4QOEkZNUKTvJdwtFi5r9h8wW1MTAghpqNhvGLGc6DAW7rgrKj1yw0f8Vdy787CEggr9n5t/TJ3Yqusf4cD9fms1g2jutjgYyWuT+gx5VY2oP9jOtEPaMKARyaqyDwKCFQQDqAppe0lr5ve+nbD5mI82pGv712NNetx/7lL4HbymMMQLcPbjX1aQnzpcE7Ogwg8l+S2qml4WvBqWfunpunx1L63t/m0rA+nIC2GVP53/BFST8eXLGFCli6v7zMj6q5nL28Uk2G5KEwY9tNXR8wJUBFhkvok6w90AMsWPYxPrWJqsdJhulK5VN8n96uuV0PTfLucm8i7IK81H/OOyEV7/Q7oxIeStYHhswYwtaTqZ2u9ttLbb/YIh7rzw3o=
  - secure: ke0XMZsmf+GBT2TpP6SHmxk8ZrST5mfyp9SRpBgjvF6fgsFKqi/wW+5aS+HNvgo63nDFb1OmHzhNfnK5AnD2T1nfb1iyrXT3cdfDJBsvg7elValG8vFLuLt3gITMwO0yj+tVqEVyvsfOLgSRPuu2Tm6mHCPpdJroQy3eU171OhLEUQv4dXNSg892tvEfnrOpdsVjHas9AeSrCgdT+FES9dk6Rve4AxBQS8ptxDzM6iEQUMDxIXTfIDw/3knPC4yJPKoKYlPrw187f8mGAraWdgzmSGWBvY+mQIh0V5L6uVbD0ykBvZf/ccojQUTu6rzPdV2zrtPzxRamSRiXstcxuazD4VLMJv6MfnJYUxQMM2KoqHKDcp2xyoX5J1bR26bdv/Mm2EEvCFzQmW6opZumSwj2LXJi3teGUzBQuDEvUYqpzoxNSzapXwCCIw9ad9JjbP6aZ5wITsnfYj7R9VLvKOUEmzLPyIdIycE0JgDxy9s0xUVjR4sXjDWWtPv+ULUEJV4awbZPdmtlznVz9yuH6SO4O837/hFKIwFxs6yDVsE3jFnhQWLG3tYP9KVzf2BSeO/8kgUAKI0CJoGf6dUUZUvTNt6S5Lr5Updl8HH4k1J9Q09ml91b6XeqMKc6m0Ztf06y3D2ygT3WSfHIqO+A7mEau6FetLOv4m+Wt2f6In4=
sudo: required
services:
- docker
language: go
before_install:
- 'echo "{ \"experimental\": true, \"storage-driver\": \"overlay2\", \"max-concurrent-downloads\":50,\"max-concurrent-uploads\":
  50 }" | sudo tee /etc/docker/daemon.json'
- sudo service docker restart
- docker images
- mkdir ~/.gocache
- export GOPATH=~/.gocache
- go get -v -u github.com/spf13/viper
- go get -v -u github.com/spf13/pflag
- go get -v -u github.com/gorilla/mux
- go build -a -installsuffix cgo -o ./image/monkey-ops ./go/*.go
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; elif [ "$TRAVIS_BRANCH"  ==
  "test" ]; then echo "testing"; else echo $TRAVIS_BRANCH ; fi`
script:
- cd ./image
- docker build --squash -t $REPO:$TAG .
- docker run -d --name monkey-test $REPO:$TAG --TOKEN=token
after_success:
- docker push $REPO:$TAG
