apiVersion: v1
kind: Template
metadata:
  name: monkey-ops-template
  annotations:
    openshift.io/display-name: Chaos Monkey
    description: Template for deploying a chaos monkey Agent in your project
    iconClass: icon-openjdk
    tags: startx,test,chaos,monkey
    openshift.io/provider-display-name: STARTX
    openshift.io/documentation-url: https://github.com/startxfr/monkey-ops/blob/master/README.md
    openshift.io/support-url: https://github.com/startxfr/monkey-ops/issues/new
message: Your chaos monkey is deploying in your project. You can use openshift console to observe deployment and your application reaction
labels:
  template: monkey-ops-template
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app_name: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app_name: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app_name: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: APP_NAME
            value: ${APP_NAME}
          - name: PROJECT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INTERVAL
            value: ${INTERVAL}
          - name: MODE
            value: ${MODE}                                             
          - name: TZ
            value: ${TZ}
          image: startxfr/monkey-ops:latest
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              memory: 20M
            request:
              memory: 20M
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/metadata
            name: podinfo
            readOnly: false
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccount: ${SA_NAME}
        serviceAccountName: ${SA_NAME}
        volumes:
        - metadata:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              name: labels
            - fieldRef:
                fieldPath: metadata.annotations
              name: annotations
          name: podinfo
  status: {}
parameters:
- displayName: Application Name
  description: Nae of this application
  name: APP_NAME
  required: true
  value: monkey-ops
- displayName: Service Account name
  description: Service Account name to use for k8s API access
  name: SA_NAME
  required: true
  value: monkey-ops
- displayName: Time interval between each action
  description: Time interval between each actuation of operator monkey. It must be in seconds
  name: INTERVAL
  value: 30
  required: true
- displayName: Execution Mode
  description: Execution Mode, It must be "background", i.e., it runs nonstop, or "rest", i.e., it executes via API Rest.
  name: MODE
  required: true
  value: background
- displayName: Chaos Method
  description: Method to use for this chaos. It must be "pod" for pod deletion, "dc" for DeploymentConfig change (reduce replica number), or "random" to alternate between the 2 previous methods
  name: METHOD
  value: pod
  required: true
- displayName: TimeZone
  description: TimeZone for the running containers.
  name: TZ
  value: Europe/Paris
